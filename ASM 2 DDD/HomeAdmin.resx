<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        MBgMgkLx/x61c96hQ1O3AAAAAElFTkSuQmCC
</value>
  </data>
</root>